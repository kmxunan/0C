# 零碳园区数字孪生系统 - Nginx负载均衡配置
# 版本: 2.0
# 作者: 零碳园区开发团队
# 日期: 2025-06-15

# 全局配置
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# 事件配置
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

# HTTP配置
http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;
    
    # 基础配置
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;
    
    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # 限流配置
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
    
    # 上游服务器组定义
    upstream zero_carbon_backend {
        least_conn;
        server energy-system:3001 max_fails=3 fail_timeout=30s weight=1;
        server energy-system-2:3001 max_fails=3 fail_timeout=30s weight=1 backup;
        keepalive 32;
    }
    
    upstream prometheus_backend {
        server prometheus:9090 max_fails=2 fail_timeout=10s;
        keepalive 8;
    }
    
    upstream grafana_backend {
        server grafana:3000 max_fails=2 fail_timeout=10s;
        keepalive 8;
    }
    
    upstream alertmanager_backend {
        server alertmanager:9093 max_fails=2 fail_timeout=10s;
        keepalive 8;
    }
    
    # 主服务器配置
    server {
        listen 80;
        listen [::]:80;
        server_name localhost zero-carbon.local;
        
        # 安全头
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # 静态资源缓存
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
        }
        
        # API接口代理
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://zero_carbon_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # 超时配置
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # 健康检查
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }
        
        # WebSocket支持
        location /ws/ {
            proxy_pass http://zero_carbon_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket特定配置
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
        }
        
        # 登录接口特殊限流
        location /api/auth/login {
            limit_req zone=login burst=5 nodelay;
            
            proxy_pass http://zero_carbon_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # 主页面
        location / {
            proxy_pass http://zero_carbon_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 缓存配置
            proxy_cache_valid 200 302 10m;
            proxy_cache_valid 404 1m;
        }
        
        # 健康检查端点
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Nginx状态页面
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.16.0.0/12;
            deny all;
        }
    }
    
    # Prometheus监控代理
    server {
        listen 9090;
        server_name localhost;
        
        location / {
            proxy_pass http://prometheus_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 基本认证（可选）
            # auth_basic "Prometheus";
            # auth_basic_user_file /etc/nginx/.htpasswd;
        }
    }
    
    # Grafana监控代理
    server {
        listen 3000;
        server_name localhost;
        
        location / {
            proxy_pass http://grafana_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Grafana特定配置
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }
    }
    
    # AlertManager代理
    server {
        listen 9093;
        server_name localhost;
        
        location / {
            proxy_pass http://alertmanager_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
    
    # SSL配置模板（生产环境使用）
    # server {
    #     listen 443 ssl http2;
    #     listen [::]:443 ssl http2;
    #     server_name zero-carbon.example.com;
    #     
    #     ssl_certificate /etc/ssl/certs/zero-carbon.crt;
    #     ssl_certificate_key /etc/ssl/private/zero-carbon.key;
    #     ssl_session_timeout 1d;
    #     ssl_session_cache shared:SSL:50m;
    #     ssl_session_tickets off;
    #     
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     
    #     add_header Strict-Transport-Security "max-age=63072000" always;
    #     
    #     location / {
    #         proxy_pass http://zero_carbon_backend;
    #         # ... 其他配置同HTTP
    #     }
    # }
    
    # 连接升级映射
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
}

# Stream配置（TCP/UDP负载均衡）
stream {
    # MQTT负载均衡
    upstream mqtt_backend {
        server mqtt-broker:1883 max_fails=2 fail_timeout=10s;
        server mqtt-broker-2:1883 max_fails=2 fail_timeout=10s backup;
    }
    
    server {
        listen 1883;
        proxy_pass mqtt_backend;
        proxy_timeout 1s;
        proxy_responses 1;
        error_log /var/log/nginx/mqtt.log;
    }
    
    # Redis负载均衡（如果需要）
    upstream redis_backend {
        server redis:6379 max_fails=2 fail_timeout=10s;
    }
    
    server {
        listen 6379;
        proxy_pass redis_backend;
        proxy_timeout 1s;
        proxy_responses 1;
        error_log /var/log/nginx/redis.log;
    }
}