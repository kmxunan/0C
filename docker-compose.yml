version: '3.8'
services:
  energy-system:
    build: .
    image: zero-carbon-energy-system:latest
    container_name: energy-system
    environment:
      - NODE_ENV=production
      - JWT_SECRET=your_strong_secret_key_here
      - PORT=80
      - HTTPS_PORT=443
      - MQTT_BROKER=mqtt-broker:1883
      - DATABASE_URL=/app/data/energy.db
      - LOG_LEVEL=info
      - ENABLE_CORS=false
      - MAX_REQUEST_SIZE=10mb
      - RATE_LIMIT_WINDOW=15
      - RATE_LIMIT_MAX=100
      - SSL_CERT_PATH=/etc/ssl/certs/ssl.crt
      - SSL_KEY_PATH=/etc/ssl/private/ssl.key
      - TLS_VERSION=TLSv1.3
      - SESSION_TIMEOUT=24h
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config/ssl:/etc/ssl
    networks:
      - energy-network
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost/health']
      interval: 30s
      timeout: 10s
      retries: 3

  mqtt-broker:
    image: eclipse-mosquitto:latest
    container_name: mqtt-broker
    ports:
      - '1883:1883'
      - '9001:9001'
    volumes:
      - ./config/mosquitto:/mosquitto/config
    networks:
      - energy-network
    restart: unless-stopped

  # Prometheus监控服务
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./config/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--storage.tsdb.retention.size=50GB'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - energy-network
    restart: unless-stopped
    depends_on:
      - energy-system

  # Grafana可视化服务
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - '3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./config/grafana/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
      - GF_SERVER_DOMAIN=localhost
      - GF_SERVER_ROOT_URL=http://localhost:3000
    networks:
      - energy-network
    restart: unless-stopped
    depends_on:
      - prometheus

  # Node Exporter系统指标收集
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - '9100:9100'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - energy-network
    restart: unless-stopped

  # AlertManager告警管理
  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    ports:
      - '9093:9093'
    volumes:
      - ./config/alertmanager:/etc/alertmanager
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    networks:
      - energy-network
    restart: unless-stopped

  # Redis缓存服务
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    networks:
      - energy-network
    restart: unless-stopped

  # Redis Exporter监控
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: redis-exporter
    ports:
      - '9121:9121'
    environment:
      - REDIS_ADDR=redis://redis:6379
    networks:
      - energy-network
    restart: unless-stopped
    depends_on:
      - redis

volumes:
  prometheus_data:
  grafana_data:
  alertmanager_data:
  redis_data:

networks:
  energy-network:
    driver: bridge
