# 零碳园区数字孪生系统 - Kubernetes Ingress配置

# 主应用Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: zero-carbon-ingress
  namespace: zero-carbon-system
  labels:
    app: energy-system
    component: ingress
  annotations:
    # Nginx Ingress Controller配置
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # 限流配置
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/rate-limit-connections: "10"
    
    # 超时配置
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    
    # 缓存配置
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "8k"
    
    # 安全头
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
      add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' ws: wss:;" always;
    
    # CORS配置
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://zero-carbon.example.com,https://admin.zero-carbon.example.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    
    # 证书管理（cert-manager）
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    cert-manager.io/acme-challenge-type: "http01"
spec:
  tls:
  - hosts:
    - zero-carbon.example.com
    - api.zero-carbon.example.com
    secretName: zero-carbon-tls
  rules:
  - host: zero-carbon.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: energy-system-service
            port:
              number: 3001
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: energy-system-service
            port:
              number: 3001
      - path: /ws
        pathType: Prefix
        backend:
          service:
            name: energy-system-service
            port:
              number: 3001
  - host: api.zero-carbon.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: energy-system-service
            port:
              number: 3001
---
# 监控服务Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: monitoring-ingress
  namespace: zero-carbon-system
  labels:
    component: monitoring
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # 基本认证（可选）
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: monitoring-auth
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required - Zero Carbon Monitoring'
    
    # IP白名单（可选）
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
    
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - monitoring.zero-carbon.example.com
    - grafana.zero-carbon.example.com
    - prometheus.zero-carbon.example.com
    - alertmanager.zero-carbon.example.com
    secretName: monitoring-tls
  rules:
  - host: grafana.zero-carbon.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: grafana-service
            port:
              number: 3000
  - host: prometheus.zero-carbon.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: prometheus-service
            port:
              number: 9090
  - host: alertmanager.zero-carbon.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: alertmanager-service
            port:
              number: 9093
---
# API专用Ingress（高级路由）
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-ingress
  namespace: zero-carbon-system
  labels:
    app: energy-system
    component: api
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    
    # API特定配置
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    
    # API限流（更严格）
    nginx.ingress.kubernetes.io/rate-limit: "50"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    
    # API认证
    nginx.ingress.kubernetes.io/auth-url: "http://energy-system-service.zero-carbon-system.svc.cluster.local:3001/api/auth/verify"
    nginx.ingress.kubernetes.io/auth-signin: "https://api.zero-carbon.example.com/auth/login"
    nginx.ingress.kubernetes.io/auth-response-headers: "X-User-ID,X-User-Role,X-User-Permissions"
    
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - api.zero-carbon.example.com
    secretName: api-tls
  rules:
  - host: api.zero-carbon.example.com
    http:
      paths:
      # 公开API（无需认证）
      - path: /public(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: energy-system-service
            port:
              number: 3001
      
      # 认证API
      - path: /auth(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: energy-system-service
            port:
              number: 3001
      
      # 受保护的API
      - path: /v1(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: energy-system-service
            port:
              number: 3001
      
      # WebSocket API
      - path: /ws(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: energy-system-service
            port:
              number: 3001
---
# 开发环境Ingress（可选）
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dev-ingress
  namespace: zero-carbon-system
  labels:
    app: energy-system
    environment: development
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    
    # 开发环境特定配置
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    
    # 开发调试头
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Debug-Environment "development" always;
      add_header X-Debug-Timestamp "$time_iso8601" always;
spec:
  rules:
  - host: dev.zero-carbon.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: energy-system-service
            port:
              number: 3001
  - host: dev-monitoring.zero-carbon.local
    http:
      paths:
      - path: /grafana
        pathType: Prefix
        backend:
          service:
            name: grafana-service
            port:
              number: 3000
      - path: /prometheus
        pathType: Prefix
        backend:
          service:
            name: prometheus-service
            port:
              number: 9090
---
# 网络策略（安全配置）
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ingress-network-policy
  namespace: zero-carbon-system
spec:
  podSelector:
    matchLabels:
      app: energy-system
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - namespaceSelector:
        matchLabels:
          name: zero-carbon-system
    ports:
    - protocol: TCP
      port: 3001
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: zero-carbon-system
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80