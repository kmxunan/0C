# 零碳园区数字孪生系统 - Kubernetes配置管理

# 主应用配置
apiVersion: v1
kind: ConfigMap
metadata:
  name: energy-system-config
  namespace: zero-carbon-system
  labels:
    app: energy-system
    component: config
data:
  app.yaml: |
    server:
      port: 3001
      host: 0.0.0.0
      cors:
        enabled: true
        origins:
          - "http://localhost:3000"
          - "https://zero-carbon.example.com"
    
    monitoring:
      prometheus:
        enabled: true
        path: "/api/metrics"
      health:
        path: "/api/health"
        ready_path: "/api/ready"
    
    logging:
      level: "info"
      format: "json"
      file: "/app/logs/app.log"
    
    features:
      energy_monitoring: true
      carbon_accounting: true
      virtual_power_plant: true
      resource_circulation: true
      data_governance: true
      green_electricity: true
  
  mqtt.yaml: |
    broker:
      host: "mqtt-broker-service"
      port: 1883
      username: "zero-carbon"
      keepalive: 60
      clean_session: true
    
    topics:
      energy_data: "energy/+/data"
      carbon_data: "carbon/+/data"
      device_status: "device/+/status"
      alerts: "system/alerts"
---
# Prometheus配置
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: zero-carbon-system
  labels:
    app: prometheus
    component: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
      external_labels:
        cluster: 'zero-carbon-k8s'
        environment: 'production'
    
    rule_files:
      - "/etc/prometheus/alert_rules.yml"
    
    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              - alertmanager-service:9093
    
    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
      
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https
      
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics
      
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name
      
      - job_name: 'energy-system'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - zero-carbon-system
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: energy-system-service
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: http
        metrics_path: '/api/metrics'
        scrape_interval: 30s
  
  alert_rules.yml: |
    groups:
      - name: zero-carbon-system
        rules:
          - alert: ServiceDown
            expr: up == 0
            for: 1m
            labels:
              severity: critical
            annotations:
              summary: "Service {{ $labels.job }} is down"
              description: "Service {{ $labels.job }} on {{ $labels.instance }} has been down for more than 1 minute."
          
          - alert: HighCPUUsage
            expr: 100 - (avg by(instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "High CPU usage on {{ $labels.instance }}"
              description: "CPU usage is above 80% for more than 5 minutes."
          
          - alert: HighMemoryUsage
            expr: (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100 > 85
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "High memory usage on {{ $labels.instance }}"
              description: "Memory usage is above 85% for more than 5 minutes."
          
          - alert: PodCrashLooping
            expr: rate(kube_pod_container_status_restarts_total[15m]) > 0
            for: 5m
            labels:
              severity: critical
            annotations:
              summary: "Pod {{ $labels.pod }} is crash looping"
              description: "Pod {{ $labels.pod }} in namespace {{ $labels.namespace }} is restarting frequently."
---
# Grafana数据源配置
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: zero-carbon-system
  labels:
    app: grafana
    component: monitoring
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus-service:9090
        isDefault: true
        editable: true
        jsonData:
          httpMethod: POST
          manageAlerts: true
          prometheusType: Prometheus
          prometheusVersion: 2.40.0
          cacheLevel: 'High'
          timeInterval: 30s
        uid: prometheus-uid
        version: 1
---
# Grafana仪表板配置
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: zero-carbon-system
  labels:
    app: grafana
    component: monitoring
data:
  dashboard.yaml: |
    apiVersion: 1
    providers:
      - name: 'Zero Carbon System Dashboards'
        orgId: 1
        folder: '零碳园区监控'
        type: file
        disableDeletion: false
        updateIntervalSeconds: 10
        allowUiUpdates: true
        options:
          path: /etc/grafana/provisioning/dashboards
---
# AlertManager配置
apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-config
  namespace: zero-carbon-system
  labels:
    app: alertmanager
    component: monitoring
data:
  alertmanager.yml: |
    global:
      smtp_smarthost: 'localhost:587'
      smtp_from: 'alerts@zero-carbon-system.com'
      resolve_timeout: 5m
    
    route:
      group_by: ['alertname', 'cluster', 'service']
      group_wait: 10s
      group_interval: 10s
      repeat_interval: 1h
      receiver: 'web.hook'
      routes:
        - match:
            severity: critical
          receiver: 'critical-alerts'
          group_wait: 5s
          repeat_interval: 30m
        - match:
            severity: warning
          receiver: 'warning-alerts'
          repeat_interval: 2h
    
    receivers:
      - name: 'web.hook'
        webhook_configs:
          - url: 'http://energy-system-service:3001/api/alerts/webhook'
            send_resolved: true
      
      - name: 'critical-alerts'
        webhook_configs:
          - url: 'http://energy-system-service:3001/api/alerts/critical'
            send_resolved: true
        # 可以添加邮件、Slack等通知配置
      
      - name: 'warning-alerts'
        webhook_configs:
          - url: 'http://energy-system-service:3001/api/alerts/warning'
            send_resolved: true
    
    inhibit_rules:
      - source_match:
          severity: 'critical'
        target_match:
          severity: 'warning'
        equal: ['alertname', 'instance']
---
# MQTT配置
apiVersion: v1
kind: ConfigMap
metadata:
  name: mqtt-config
  namespace: zero-carbon-system
  labels:
    app: mqtt-broker
    component: messaging
data:
  broker-url: "mqtt://mqtt-broker-service:1883"
  mosquitto.conf: |
    # Mosquitto配置文件
    port 1883
    listener 9001
    protocol websockets
    
    allow_anonymous false
    password_file /mosquitto/config/passwd
    
    log_dest stdout
    log_type all
    
    connection_messages true
    log_timestamp true
    
    # 持久化配置
    persistence true
    persistence_location /mosquitto/data/
    
    # 安全配置
    max_connections 1000
    max_inflight_messages 100
    max_queued_messages 1000